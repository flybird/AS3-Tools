package tw.com.neil.image {		import flash.display.Loader;	import flash.display.Sprite;	import flash.events.*;	import flash.geom.Point;	import flash.net.URLRequest;	import flash.system.LoaderContext;	public class ImageBase extends Sprite {				private var imgLoader:Loader;		private var _x:Number;		private var _y:Number;		private var _w:Number;		private var _h:Number;		private var _imageCurrentWidth:Number;		private var _imageCurrentHeight:Number;		public function ImageBase(x:Number = 0, y:Number = 0, w:Number = 0, h:Number = 0){			init();			addEvents();		}				private function init():void {			imgLoader = new Loader();			imgLoader.mouseEnabled = false;			addChild(imgLoader);		}		public function load(url:String):void {			var lc:LoaderContext = new LoaderContext(true);			imgLoader.unloadAndStop();			imgLoader.load(new URLRequest(url),lc);		}				public function unloadImage():void {			imgLoader.unloadAndStop();		}				private function addEvents():void {			//imgLoader.contentLoaderInfo.addEventListener(Event.OPEN, loadOpenListener);			//imgLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, loadProgressListener);			imgLoader.contentLoaderInfo.addEventListener(Event.INIT, loadInitListener);			imgLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadIOErrorListener);			//addEventListener(Event.REMOVED_FROM_STAGE, removefromstage);		}		private function removeEvents():void {			imgLoader.contentLoaderInfo.removeEventListener(Event.OPEN, loadOpenListener);			imgLoader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, loadProgressListener);			imgLoader.contentLoaderInfo.removeEventListener(Event.INIT, loadInitListener);			imgLoader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, loadIOErrorListener);			//removeEventListener(Event.REMOVED_FROM_STAGE, removefromstage);		}								public function setSizeByProportion(newW:Number, newH:Number):void {			var p:Number;			var oriW:Number = imgLoader.content.width;			var oriH:Number = imgLoader.content.height;							if (oriW < oriH) {				p = newW / oriW;				imgLoader.content.width = _imageCurrentWidth = newW;				imgLoader.content.height = _imageCurrentHeight = p * oriH;			} else {				p = newH / oriH;				imgLoader.content.height = _imageCurrentWidth = newH;				imgLoader.content.width = _imageCurrentHeight = p * oriW;			}					}					public function destory():void {			imgLoader.unloadAndStop();						removeEvents();		}											/*		 *		 * ===================== LoaderInfo EVENTS ========================		 *		 */		protected function loadOpenListener(e:Event):void {			dispatchEvent(new Event(Event.OPEN));		}		protected function loadProgressListener(e:ProgressEvent):void {					}		private function loadInitListener(et:Event):void {			_w = et.target.content.width;			_h = et.target.content.height;			dispatchEvent(new Event(Event.COMPLETE));		}						protected function loadIOErrorListener(e:IOErrorEvent):void {			dispatchEvent(e);		}				/*		private function removefromstage(e:Event):void {			removeEvents();			imgLoader.unloadAndStop(true);		}		*/	}}